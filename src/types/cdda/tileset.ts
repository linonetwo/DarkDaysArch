/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CDDATileSetImageID = number | number[] | CDDATileSetRandomSpriteDescItem[];
export type CDDATileSetID = string | string[];

/**
 * Have all original JSON CDDATileSetConfig have, but with additional inverse index for fast look at things
 */
export interface CDDATileSetConfigWithCache {
  /**
   * key is file name like `large.png`, value is base64 blob data string
   */
  textures: {
    [k: string]: string;
  };
  /**
   * inverse index to quick lookup tile data, key is tile name like `ranch_camp_17`, value is data I think useful for React renderer.
   */
  tile_data_index: {
    [k: string]: CDDATileSetInverseIndexedTileData;
  };
  [k: string]: unknown;
}
/**
 * value for tile_data_index
 */
export interface CDDATileSetInverseIndexedTileData {
  /**
   * id in whole tileset is consequent, so each png 's tile 's id should have minus the start_id of this png
   */
  start_id: number;
  /**
   * copy of tile data
   */
  tile: CDDATileSetTile;
  /**
   * copy of tileset image data, omit the `tiles` `ascii` field.
   */
  tileset: CDDATileSetTilesNew;
  [k: string]: unknown;
}
export interface CDDATileSetTile {
  "//"?: string | null;
  additional_tiles?: CDDATileSetAdditionalTile[];
  animated?: boolean | null;
  bg?: CDDATileSetImageID | null;
  fg?: CDDATileSetImageID | null;
  id: CDDATileSetID;
  multitile?: boolean | null;
  rotates?: boolean | null;
  [k: string]: unknown;
}
export interface CDDATileSetAdditionalTile {
  bg?: CDDATileSetImageID | null;
  fg?: CDDATileSetImageID | null;
  id: string;
  [k: string]: unknown;
}
export interface CDDATileSetRandomSpriteDescItem {
  sprite: number;
  weight: number;
  [k: string]: unknown;
}
export interface CDDATileSetTilesNew {
  "//"?: string | null;
  ascii?: CDDATileSetAscii[];
  file: string;
  sprite_height?: number | null;
  /**
   * Derived field, calculated in the tileset parser, this is a ratio (sprite_height / tileVisualWidthHeight[0].height)
   */
  sprite_height_ratio?: number | null;
  sprite_offset_x?: number | null;
  sprite_offset_y?: number | null;
  sprite_width?: number | null;
  /**
   * Derived field, calculated in the tileset parser, this is a ratio (sprite_width / tileVisualWidthHeight[0].width)
   */
  sprite_width_ratio?: number | null;
  tiles: CDDATileSetTile[];
  [k: string]: unknown;
}
export interface CDDATileSetAscii {
  bold: boolean;
  color: string;
  offset: number;
  [k: string]: unknown;
}
